{
  "permissions": {
    "allow": [
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(npm run build:*)",
      "Bash(npm run dev:*)",
      "Bash(/bashes)",
      "Bash(echo $VITE_DEV_SERVER_URL)",
      "Bash(pkill:*)",
      "Bash(VITE_DEV_SERVER_URL=http://localhost:5173/ npm run dev)",
      "Bash(npm install:*)",
      "Bash(curl http://localhost:9876/auth/callback?code=test)",
      "Bash(awk:*)",
      "Bash(tree:*)",
      "WebSearch",
      "WebFetch(domain:supabase.com)",
      "WebFetch(domain:ai-sdk.dev)",
      "WebFetch(domain:github.com)",
      "Bash(git diff:*)",
      "Bash(grep:*)",
      "WebFetch(domain:orm.drizzle.team)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(npx tsc:*)",
      "WebFetch(domain:www.npmjs.com)",
      "WebFetch(domain:hono.dev)",
      "Bash(lsof:*)",
      "Bash(curl:*)",
      "Read(//tmp/**)",
      "Bash(rm:*)",
      "Read(//Users/wei/Learning/ai-sdk-preview-rag/**)",
      "mcp__ide__getDiagnostics",
      "Bash(ls:*)",
      "Bash(VITE_DEV_SERVER_URL=http://localhost:5174/ npm run dev:*)",
      "Bash(xargs kill:*)",
      "Bash(kill:*)",
      "WebFetch(domain:sdk.vercel.ai)",
      "Bash(.specify/scripts/bash/create-new-feature.sh:*)",
      "Bash(.specify/scripts/bash/setup-plan.sh:*)",
      "Bash(.specify/scripts/bash/check-prerequisites.sh:*)",
      "Bash(mv docs/knowleadge-base.md docs/knowledge-base.md)",
      "Bash(.specify/scripts/bash/update-agent-context.sh claude)",
      "Bash(wc -l /Users/wei/Coding/rafa/client/src/routes/_authenticated/(knowledge-base)/knowledge-base.$knowledgeBaseId.tsx)",
      "Bash(git rev-parse --git-dir)",
      "Bash(npx drizzle-kit generate)",
      "Bash(npx drizzle-kit push)",
      "Bash(npx drizzle-kit push --force)",
      "Bash(npx tsx db/run-migration.ts)",
      "Bash(test -f .env)",
      "Bash(if [ -d \"/Users/wei/Coding/rafa/specs/004-marketplace-sharing/checklists\" ])",
      "Bash(then find \"/Users/wei/Coding/rafa/specs/004-marketplace-sharing/checklists\" -name \"*.md\" -type f)",
      "Bash(else echo \"NO_CHECKLISTS\")",
      "Bash(fi)",
      "Bash(wc -l \"/Users/wei/Coding/rafa/client/src/routes/_authenticated/(knowledge-base)/knowledge-base.$knowledgeBaseId.tsx\")",
      "Bash(if [ -d \"/Users/wei/coding/rafa/specs/004-marketplace-sharing/checklists\" ])",
      "Bash(then find \"/Users/wei/coding/rafa/specs/004-marketplace-sharing/checklists\" -name \"*.md\" -type f)",
      "Bash(test -f /Users/wei/coding/rafa/server/.env)",
      "Bash(test -f /Users/wei/coding/rafa/server/src/lib/slug-generator.ts)",
      "Bash(test -f /Users/wei/coding/rafa/server/db/queries/marketplace.ts)",
      "Bash(test -f /Users/wei/coding/rafa/server/db/queries/chatConfig.ts)",
      "Bash(test -f /Users/wei/coding/rafa/client/src/hooks/marketplace/mutations/useInstallAgent.ts)",
      "Bash(test -f /Users/wei/coding/rafa/client/src/hooks/marketplace/queries/useCheckAgentInstalled.ts)",
      "Bash(test -f /Users/wei/coding/rafa/server/src/routes/marketplace.ts)",
      "Bash(wc -l \"/Users/wei/coding/rafa/client/src/routes/_authenticated/marketplace.agent.$agentId.tsx\")",
      "Bash(wc -l /Users/wei/coding/rafa/client/src/routes/_authenticated/chat.$chatId.tsx)",
      "Bash(git checkout client/src/routes/_authenticated/marketplace.agent.$agentId.tsx)",
      "Bash(wc -l \"/Users/wei/Coding/rafa/client/src/routes/_authenticated/marketplace.agent.$agentId.tsx\")",
      "Bash(wc -l /Users/wei/Coding/rafa/client/src/routes/_authenticated/marketplace.agent.'$'agentId.tsx)",
      "Bash(if [ -f \"/Users/wei/Coding/rafa/research.md\" ])",
      "Bash(then mv /Users/wei/Coding/rafa/research.md /Users/wei/Coding/rafa/specs/005-marketplace-sharing-refactor/research.md)",
      "Bash(else echo \"research.md not found in repo root\")",
      "Bash(if [ -d \"/Users/wei/Coding/rafa/specs/005-marketplace-sharing-refactor/checklists\" ])",
      "Bash(then find \"/Users/wei/Coding/rafa/specs/005-marketplace-sharing-refactor/checklists\" -name \"*.md\" -type f)",
      "Bash(bash .specify/scripts/bash/check-prerequisites.sh --json --require-tasks --include-tasks)",
      "Bash(test -f /Users/wei/Coding/rafa/client/src/hooks/knowledge-base/mutations/useUnshareKnowledgeBase.ts)",
      "Bash(test -f /Users/wei/Coding/rafa/client/src/hooks/chat-config/mutations/useUnshareChatConfig.ts)",
      "Bash(npm uninstall electron-trpc @trpc/client @trpc/server @trpc/react-query superjson)",
      "Bash(wait)",
      "Bash(git rev-parse --abbrev-ref HEAD)",
      "Read(//Applications/Ollama.app/Contents/Resources/**)",
      "Bash(if [ -d \"/Users/wei/Coding/rafa/specs/006-private-mode/checklists\" ])",
      "Bash(then find \"/Users/wei/Coding/rafa/specs/006-private-mode/checklists\" -name \"*.md\" -type f)",
      "Bash(mkdir -p electron/services electron/ipc electron/db db src/hooks/mode src/contexts src/config src/lib/local-utils)",
      "Read(//Users/wei/Library/**)",
      "Bash(du:*)",
      "Read(//Users/wei/**)",
      "Bash(test:*)",
      "Bash(mkdir:*)",
      "Bash(ollama --version:*)",
      "Bash(node --version)",
      "Bash(xargs cat:*)",
      "Bash(xargs ls:*)",
      "Bash(node -e:*)",
      "Bash(npm uninstall:*)",
      "Bash(ollama list:*)",
      "Bash(cp:*)",
      "Bash(timeout 20 npm run dev:*)",
      "Bash(node -p:*)",
      "Bash(NODE_ENV=development node:*)",
      "Bash(git -C /Users/wei/Coding/rafa log --all --full-history --oneline -- \"**/infer-types*\")",
      "Bash(git -C /Users/wei/Coding/rafa show 3c08ca4:client/src/renderer/src/types/infer-types.ts)",
      "Bash(git -C /Users/wei/Coding/rafa log:*)",
      "Bash(git -C /Users/wei/Coding/rafa ls-files:*)",
      "Bash(git -C /Users/wei/Coding/rafa show:*)",
      "Bash(git -C /Users/wei/Coding/rafa diff 3c08ca43e97587bd91a9c0ceb49cf0425bc9b068~1..3c08ca43e97587bd91a9c0ceb49cf0425bc9b068 --name-only)",
      "Bash(python3 -m json.tool:*)",
      "Bash(if [ -d \"/Users/wei/Coding/rafa/specs/007-private-knowledge-base/checklists\" ])",
      "Bash(then find \"/Users/wei/Coding/rafa/specs/007-private-knowledge-base/checklists\" -name \"*.md\" -type f)",
      "Bash(echo:*)",
      "Bash(python3:*)",
      "Bash(node:*)",
      "Bash(npm run build:skip-type-check:*)",
      "Bash(vite build:*)",
      "Bash(wc:*)",
      "Bash(if [ -d \"/Users/wei/Coding/rafa/specs/008-specify-scripts-bash/checklists\" ])",
      "Bash(then find \"/Users/wei/Coding/rafa/specs/008-specify-scripts-bash/checklists\" -name \"*.md\" -type f)",
      "Bash(npm run:*)",
      "SlashCommand(/speckit.plan)",
      "Bash(if [ -d \"/Users/wei/Coding/rafa/specs/009-notes-private-mode/checklists\" ])",
      "Bash(then find \"/Users/wei/Coding/rafa/specs/009-notes-private-mode/checklists\" -name \"*.md\" -type f)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npx shadcn@latest add:*)",
      "Bash(printf:*)",
      "Bash(npx vite:*)",
      "Bash(mv:*)",
      "Bash(rmdir:*)",
      "Bash(if [ -d \"/Users/wei/Coding/rafa/specs/010-tiptap-editor-migration/checklists\" ])",
      "Bash(then find \"/Users/wei/Coding/rafa/specs/010-tiptap-editor-migration/checklists\" -name \"*.md\" -type f)",
      "Bash(if [ -d \"/Users/wei/Coding/rafa/specs/011-cloud-deployment-packaging/checklists\" ])",
      "Bash(then find \"/Users/wei/Coding/rafa/specs/011-cloud-deployment-packaging/checklists\" -name \"*.md\" -type f)",
      "Bash(pip install:*)",
      "Bash(eb:*)",
      "Bash(npm start)",
      "Bash(timeout 10 npm start:*)",
      "Bash(git checkout:*)",
      "Bash(aws elasticbeanstalk list-available-solution-stacks:*)",
      "Bash(chmod:*)",
      "Bash(/Users/wei/Coding/rafa/scripts/deploy-backend.sh)",
      "Bash(if [ -d \"/Users/wei/coding/rafa/specs/011-cloud-deployment-packaging/checklists\" ])",
      "Bash(then find \"/Users/wei/coding/rafa/specs/011-cloud-deployment-packaging/checklists\" -name \"*.md\" -type f)",
      "Bash(electron-builder)",
      "Bash(git pull:*)",
      "Bash(killall:*)",
      "Bash(open:*)",
      "Bash(cd:*)",
      "Bash(git clone:*)",
      "Bash(rsync:*)"
    ],
    "deny": [],
    "ask": []
  }
}
